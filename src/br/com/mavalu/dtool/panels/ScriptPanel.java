/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.mavalu.dtool.panels;

import br.com.mavalu.dtool.DtoolJFrame;
import br.com.mavalu.dtool.control.DtoolDqlControl;
import br.com.mavalu.dtool.control.DtoolLogControl;
import br.com.mavalu.useful.DocumentumUseful;
import br.com.mavalu.useful.LoginTableModel;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.event.KeyEvent;
import javax.swing.JDialog;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import java.awt.datatransfer.StringSelection;
import java.io.IOException;
import java.util.logging.Level;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author q1D55V6G
 */
public class ScriptPanel extends javax.swing.JPanel {

    private final DtoolJFrame dtoolJFrame;
    private SwingWorker workerQuery;
    private LoginTableModel queryTableModel;
    private QueryList queryList;
    private boolean jTextArea2Edited;//controla se a query foi editada
    private boolean keyPressed;
    private SwingWorker workerExport;

    /**
     * Creates new form QueryPanel
     */
    public ScriptPanel(DtoolJFrame dtf) {
        initComponents();
        dtoolJFrame = dtf;
        //LImpa a lista
        jTable1.setModel(new DefaultTableModel());

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog(dtoolJFrame);
        jDialog2 = new javax.swing.JDialog(dtoolJFrame);
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jDialog1.setTitle("Queries");
        jDialog1.setModal(true);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jDialog2.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDialog2.setTitle("Exportação");
        jDialog2.setModal(true);
        jDialog2.setResizable(false);

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jSplitPane2.setDividerLocation(150);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Query"));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10", "50", "100", "NO" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel10.setText("Pg:");

        jLabel3.setText("<<?>>");
        jLabel3.setToolTipText("<html>\n<h2>Comandos permitidos:</h2><br/>\n1 - ALT + Click Esquerdo sobre uma celula da tabela executa o comando dump,c,<r_object_id> <br/>\n2 - Click Duplo sobre uma Celula da tabela copia o contéudo da celula para área de transferência do windows<br/>\n3 - Selecione um r_object_id no grid e clique em export para exportar o conteúdo de um documento<br/>\n</htm>");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea2FocusLost(evt);
            }
        });
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea2KeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(jTextArea2);

        jPanel9.setMaximumSize(new java.awt.Dimension(0, 0));
        jPanel9.setName(""); // NOI18N

        jButton2.setText("Run");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton10.setText("Export");
        jButton10.setEnabled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Cancel");
        jButton11.setEnabled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton14.setText("Import");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(6, 6, 6)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addGap(81, 81, 81))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton10)
                    .addComponent(jButton11)
                    .addComponent(jButton2)
                    .addComponent(jButton14))
                .addGap(2, 2, 2))
        );

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jButton12.setText(">>");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jButton9.setText(">");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel2.setText("0");

        jLabel1.setText("Pages of");

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jButton8.setText("<<");
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jButton13.setText("<");
        jButton13.setEnabled(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jTextField3.setBackground(new java.awt.Color(240, 240, 240));
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("0");
        jTextField3.setBorder(null);
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 58, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(6, 6, 6)
                .addComponent(jButton13)
                .addGap(6, 6, 6)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addGap(6, 6, 6)
                .addComponent(jButton12)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton13)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButton12)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addGap(0, 0, 0)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jSplitPane2.setLeftComponent(jPanel6);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jTable1);

        jSplitPane2.setRightComponent(jScrollPane4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Execute a query
     *
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        DtoolLogControl.log("Executando...............................", Level.WARNING);
        if (!jTextArea2.getText().isEmpty()) {
            if (jTextArea2.getText().toLowerCase().startsWith("delete")
                    || jTextArea2.getText().toLowerCase().startsWith("update")
                    || jTextArea2.getText().toLowerCase().startsWith("drop")) {

                Object[] options = {"OK",
                    "Cancela"};

                int opt = JOptionPane.showOptionDialog(this.dtoolJFrame,
                        "Este comando pode alterar sua base definitivamente. Confirma execução do comando?",
                        "PERIGO!!!!",
                        JOptionPane.WARNING_MESSAGE,
                        JOptionPane.WARNING_MESSAGE,
                        null,
                        options,
                        null);
                if (opt != 0) {
                    DtoolLogControl.log("A execução da query foi cancelada", Level.WARNING);
                    return;
                }
            }
        }

        jButton10.setEnabled(false);
        jButton12.setEnabled(false);
        jButton9.setEnabled(false);
        jButton2.setEnabled(false);
        jButton11.setEnabled(true);
        jComboBox2.setEnabled(false);

        dtoolJFrame.operationControl(dtoolJFrame.OP_PROGRESS_BAR, true, null);

        jTable1.setModel(new DefaultTableModel());
        jTable1.repaint();

        workerQuery = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                // Tem que altera a paginação para não exibir nenhuma página
                queryTableModel.setPageSize(queryTableModel.getMaxRowsCount());
                jTextField3.setText(String.valueOf(queryTableModel.getPage()));
                jLabel2.setText(String.valueOf(queryTableModel.getMaxPageNumber()));
                jComboBox2.setSelectedItem("NO");

                DtoolDqlControl.executeScript(jTable1, jTextArea2);
                //Se houver valor no campo, executa query selecionada
                // Se não houver, executa todas as queries exibindo a query em execução na tela de execução.

                // Tem que selecionar a linha executada atualmente.
                // O cancelar, aborta a execução após a última linha executada
                //  DtoolDqlControl.executeQuery(jTextArea2.getText(), jTable1, (String) jComboBox1.getSelectedItem(),
                //        (String) jComboBox2.getSelectedItem(), jTextArea2Edited, dtoolJFrame.dateFormat);
                //Exibe o número de linhas retornadas
                //queryTableModel = (LoginTableModel) jTable1.getModel();
                //String maxRows = Integer.toString(queryTableModel.getMaxRowsCount());
                //dtoolJFrame.operationControl(dtoolJFrame.OP_QUERY_RESULT_SIZE, false, new String[]{maxRows});
                //jLabel2.setText(String.valueOf(queryTableModel.getMaxPageNumber()));
                jTextArea2Edited = false;

                return null;
            }

            @Override
            protected void done() {

                dtoolJFrame.operationControl(dtoolJFrame.OP_PROGRESS_BAR, false, null);
                if (queryTableModel != null) {
                    jTextField3.setText(String.valueOf(queryTableModel.getPage()));
                    //Erro na query
                    jButton9.setEnabled(true);
                    jButton12.setEnabled(true);
                    jButton10.setEnabled(true);

                }
                jButton2.setEnabled(true);
                jButton11.setEnabled(false);
                jComboBox2.setEnabled(true);
            }

        };

        workerQuery.execute();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        workerQuery.cancel(true);
        jButton11.setEnabled(false);
        DtoolLogControl.log("A execução da query foi cancelada", Level.WARNING);

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int row = jTable1.getSelectedRow();
        int col = jTable1.getSelectedColumn();

        String sel = (String) (jTable1.getValueAt(row, col));

        if (evt.getClickCount() == 2) {
            StringSelection selection = new StringSelection(sel);

            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(selection, selection);
        }

        jTextArea2.setText((String) (jTable1.getValueAt(row, col)));
    }//GEN-LAST:event_jTable1MouseClicked
    /**
     * <<
     *
     * @param evt
     */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        queryTableModel.setPage(1);

        jButton8.setEnabled(false);//<<
        jButton13.setEnabled(false);//<
        jButton9.setEnabled(true);//>
        jButton12.setEnabled(true);//>>
        jTextField3.setText("1");
        //jLabel2.setText(TOOL_TIP_TEXT_KEY);

        queryTableModel.fireTableDataChanged();

    }//GEN-LAST:event_jButton8ActionPerformed
    /**
     * <
     *
     * @param evt
     */
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed

        if (queryTableModel.previousPage()) {
            jButton8.setEnabled(true);//<<        
            jButton13.setEnabled(true);//<
            jButton9.setEnabled(true);//>
            jButton12.setEnabled(true);//>>

        } else {

            jButton8.setEnabled(false);//<<        
            jButton13.setEnabled(false);//<
            jButton9.setEnabled(true);//>
            jButton12.setEnabled(true);//>>
        }
        jTextField3.setText(String.valueOf(queryTableModel.getPage()));

        queryTableModel.fireTableDataChanged();

    }//GEN-LAST:event_jButton13ActionPerformed
    /**
     * Selected page returned to query
     *
     * @param evt
     */
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

        String value = (String) jComboBox2.getSelectedItem();
        //queryTableModel.setPage(Integer.parseInt(value));

        if (queryTableModel != null) {

            if (value.equals("NO")) {

                queryTableModel.setPageSize(queryTableModel.getMaxRowsCount());

            } else {

                queryTableModel.setPageSize(Integer.parseInt(value));
            }

            queryTableModel.fireTableDataChanged();

            jTextField3.setText(String.valueOf(queryTableModel.getPage()));
            jLabel2.setText(String.valueOf(queryTableModel.getMaxPageNumber()));
        }

        jButton8.setEnabled(false);//<<        
        jButton13.setEnabled(false);//<
        jButton9.setEnabled(true);//>
        jButton12.setEnabled(true);//>>

    }//GEN-LAST:event_jComboBox2ActionPerformed
    /**
     * >
     *
     * @param evt
     */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (queryTableModel.nextPage()) {
            jButton8.setEnabled(true);//<<        
            jButton13.setEnabled(true);//<
            jButton9.setEnabled(true);//>
            jButton12.setEnabled(true);//>>

        } else {

            jButton8.setEnabled(true);//<<        
            jButton13.setEnabled(true);//<
            jButton9.setEnabled(false);//>
            jButton12.setEnabled(false);//>>
        }
        jTextField3.setText(String.valueOf(queryTableModel.getPage()));
        queryTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jButton9ActionPerformed
    /**
     * >>
     *
     * @param evt
     */

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        queryTableModel.setPage(queryTableModel.getMaxPageNumber());
        jButton8.setEnabled(true);//<<        
        jButton13.setEnabled(true);//<
        jButton9.setEnabled(false);//>
        jButton12.setEnabled(false);//>>
        jTextField3.setText(String.valueOf(queryTableModel.getPage()));
        queryTableModel.fireTableDataChanged();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed

    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            int page = Integer.parseInt(jTextField3.getText());

            if (page > 0 && page <= queryTableModel.getMaxPageNumber()) {

                queryTableModel.setPage(page);

                if (page == queryTableModel.getMaxPageNumber()) {
                    jButton9.setEnabled(false);//>
                    jButton12.setEnabled(false);//>>
                } else {
                    jButton9.setEnabled(true);//>
                    jButton12.setEnabled(true);//>>
                }

                if (page == 1) {
                    jButton8.setEnabled(false);//<<        
                    jButton13.setEnabled(false);//<

                } else {
                    jButton8.setEnabled(true);//<<        
                    jButton13.setEnabled(true);//<                    
                }
                jTextField3.setText(String.valueOf(queryTableModel.getPage()));

                queryTableModel.fireTableDataChanged();

            }
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jTextArea2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextArea2FocusLost

    }//GEN-LAST:event_jTextArea2FocusLost

    private void jTextArea2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea2KeyTyped
        jTextArea2Edited = true;
    }//GEN-LAST:event_jTextArea2KeyTyped

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed

        keyPressed = evt.getKeyCode() == KeyEvent.VK_ALT;


    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        keyPressed = false;

    }//GEN-LAST:event_jTable1KeyReleased

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
    }//GEN-LAST:event_jTable1MouseReleased

    /**
     * Executa do processo de export
     *
     * @param evt
     */
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        jTable1.clearSelection();

        try {
            exportAllGrid();
        } catch (IOException ex) {
            DtoolLogControl.log(ex, Level.SEVERE);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        DtoolLogControl.log("Importando Script!!", Level.WARNING);
        try {
            importToGrid();
        } catch (IOException ex) {
            DtoolLogControl.log(ex, Level.SEVERE);
        }
    }//GEN-LAST:event_jButton14ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    /**
     *
     * Metodo utilizado para execução de ações entre os difernetes componentes de interface
     *
     * @param op - Operação: SERVER_CONNECTION = 0; LOGIN = 1; LOGIN_CREDENTIALS = 2; PROGRESS_BAR = 3; DUMP = 4;
     * @param status Flag que seta o status nos componentes;
     * @param obj Qualquer objeto com status, informações para processamento.
     */
    public void operationControl(int op, boolean status, Object obj) {
        String maxRows = null;
        switch (op) {
            case DtoolJFrame.OP_SERVER_CONNECTION: //Login
                jButton2.setEnabled(false);
                jTextField3.setEditable(false);
                jButton10.setEnabled(false);
                jButton11.setEnabled(false);
                jButton12.setEnabled(false);
                jButton13.setEnabled(false);
                jButton2.setEnabled(false);
                jButton8.setEnabled(false);
                jButton9.setEnabled(false);
                //jComboBox2.setEnabled(false);

                break;
            case DtoolJFrame.OP_LOGIN: //Login
                jButton2.setEnabled(status);
                jTextField3.setEditable(status);
                jComboBox2.setEnabled(status);
                break;

            /**
             * case DtoolJFrame.OP_EXPORT: jButton2.setEnabled(status); jTextField3.setEditable(status); jComboBox2.setEnabled(status);
             * jButton7.setEnabled(status); jButton10.setEnabled(status); break;
             *
             */
            case DtoolJFrame.OP_SCRIPT_SHOW:
                jTextArea2.setText("");
                Object[] objArray = (Object[]) obj;
                DtoolDqlControl.executeScriptTemplate((LoginTableModel) objArray[0], jTable1, (String) objArray[1], dtoolJFrame.dateFormat, (String) jComboBox2.getSelectedItem());
                queryTableModel = (LoginTableModel) jTable1.getModel();
                maxRows = Integer.toString(queryTableModel.getMaxRowsCount());
                dtoolJFrame.operationControl(dtoolJFrame.OP_QUERY_RESULT_SIZE, false, new String[]{maxRows});
                jLabel2.setText(String.valueOf(queryTableModel.getMaxPageNumber()));
                jButton10.setEnabled(true);
                jButton9.setEnabled(true);
                jButton12.setEnabled(true);                
                break;
            case DtoolJFrame.OP_IMPORT_SCRIPT:
                queryTableModel = (LoginTableModel) obj;
                jButton14.setEnabled(true);
                maxRows = Integer.toString(queryTableModel.getMaxRowsCount());
                dtoolJFrame.operationControl(dtoolJFrame.OP_QUERY_RESULT_SIZE, false, new String[]{maxRows});
                jLabel2.setText(String.valueOf(queryTableModel.getMaxPageNumber()));
                jLabel2.setText(String.valueOf(queryTableModel.getMaxPageNumber()));
                break;
        }
    }

    private void exportAllGrid() throws IOException {
        ExportScriptPanel exportPanel;
        exportPanel = new ExportScriptPanel(jDialog2, dtoolJFrame, (LoginTableModel) jTable1.getModel(), jTextArea2.getText());

        jDialog2.setLocationRelativeTo(null);
        jDialog2.setLocationByPlatform(true);

        jDialog2.setContentPane(exportPanel);
        //jDialog2.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ImageIcon img = new ImageIcon("./img/img (1).png");
        jDialog2.setIconImage(img.getImage());
        jDialog2.pack();
        jDialog2.setVisible(true);

    }

    private void importToGrid() throws IOException {
        ImportPanel importPanel;
        importPanel = new ImportPanel(jDialog2, dtoolJFrame, jTable1, (String) jComboBox2.getSelectedItem(), true);
        jDialog2.setLocationRelativeTo(null);
        jDialog2.setLocationByPlatform(true);

        jDialog2.setContentPane(importPanel);
        //jDialog2.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
        ImageIcon img = new ImageIcon("./img/img (1).png");
        jDialog2.setIconImage(img.getImage());
        jDialog2.pack();
        jDialog2.setVisible(true);

    }

}
